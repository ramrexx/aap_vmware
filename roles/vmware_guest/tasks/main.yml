# ---
---
- name: Clone VM from template
  tags: create
  register: vminfo_results
  delegate_to: localhost
  community.vmware.vmware_guest:
    cluster: "{{ vcenter_cluster }}"
    datacenter: "{{ vcenter_datacenter }}"
    folder: "{{ vcenter_folder }}"
    hardware:
      memory_mb: "{{ vm_sizes[vmsize].ram }}"
      num_cpus: "{{ vm_sizes[vmsize].cpu }}"
    name: "{{ vm_name }}"
    # networks:
    #   - name: "{{ vcenter_network }}"
    #     type: dhcp
    state: poweredon
    template: "{{ vcenter_template }}"
    wait_for_ip_address: true

- name: Log vminfo_results
  tags: always
  when: vminfo_results is defined
  ansible.builtin.debug:
    var: vminfo_results
    # verbosity: 2

- name: "Wait for {{ vminfo_results.instance.ipv4 }} to respond"
  delegate_to: localhost
  tags: create
  when: vminfo_results.changed
  ansible.builtin.wait_for:
    host: "{{ vminfo_results.instance.ipv4 }}"
    port: "{{ ansible_port | default(22) }}"
    delay: 30
    timeout: 300
    state: started

- name: Remove VM from vCenter
  tags: remove
  register: vmware_guest__remove_result
  community.vmware.vmware_guest:
    cluster: "{{ vcenter_cluster }}"
    datacenter: "{{ vcenter_datacenter }}"
    delete_from_inventory: true
    force: true
    name: "{{ vm_name }}"
    state: absent

- name: Log vmware_guest__remove_result
  tags: remove
  when: vmware_guest__remove_result is defined
  ansible.builtin.debug:
    var: vmware_guest__remove_result
    # verbosity: 2
